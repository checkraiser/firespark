/** *	@service ReadValidate *	@desc Validates form input values (required and email) using style class * *	@style .required *	@style .email * *	@param form string [memory] *	@param error string [memory] optional default span ***/FireSpark.core.service.ReadValidate = {	input : function(){		return {			required : ['form'],			optional : { error : 'span' }		};	},		run : function($memory){		var $result = true;		var $error = $memory['error'];				var fail = function($el, $sel){			$el.next($sel).stop(true, true).slideDown(1000).delay(5000).fadeOut(1000);		}				var $value = false;		var checkMatch = function($index, $el){			if($value && $(this).val()!=$value ){				$result = false;				fail($(this), $error + '.error');				return false;			}			$value = $(this).val();		}		$($memory['form'] + ' .match').each(checkMatch);				var checkRequired = function($index, $el){			if($(this).val() == ''){				$result = false;				fail($(this), $error + '.error');				return false;			}		}		$($memory['form'] + ' .required').each(checkRequired);				var $emailRegex = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;		var checkEmail = function($index, $el){			if(!$emailRegex.test($(this).val())){				$result = false;				fail($(this), $error + '.error');				return false;			}		}		$($memory['form'] + ' .email').each(checkEmail);				$memory['valid'] = $result;		return $memory;	},		output : function(){		return [];	}};