/** *	@workflow LoadTemplate *	@desc Loads template with data into element * *	@param loader object [message] optional default FireSpark.jquery.service.LoadAjax *	@param url URL [message|memory] *	@param loadparams string/object [message|memory] *	@param encode string [message] optional default false *	@param agent string [message] optional default false *  *	@param element element [message|memory] *	@param loadmsg string [message] optional default (FireSpark.core.constant.loadmsg) * *	@param confirm boolean [message] optional default false *	@param confirmmsg string [message] optional default 'Are you sure you want to continue ?' *	@param selector string [message] optional default false * *	@param process boolean [message] optional default false * 	@param status string [message] optional default false * 	@param processflow string [message] optional default false * *	@param template string [message|memory] optional default false (FireSpark.jquery.template.Default) ***/FireSpark.jquery.workflow.LoadTemplate = {	run : function(message, memory){		return FireSpark.Kernel.run([{			service : FireSpark.core.service.LoadConfirm,			confirm : message.confirm || false,			value : message.confirmmsg || 'Are you sure you want to continue ?'		},{			service : FireSpark.jquery.service.RequestWrite,			loadparams : message.loadparams || false,			type : message.encode || false		},{			service : FireSpark.jquery.service.ElementState,			element : message.selector || false,			disabled : true		},{			service : FireSpark.jquery.service.ElementContent,			element : message.element || false,			data : message.loadmsg || FireSpark.core.constant.loadmsg,			duration : 10		},{			service : message.loader || FireSpark.jquery.service.LoadAjax,			loadurl : message.url || false,			processData : false,			agent : message.agent || false,			workflow : [{				service : FireSpark.jquery.service.ResponseRead,				process : message.process || true,				status : message.status || false,				processflow : message.processflow || false,			},{				service : FireSpark.jquery.service.ElementState,				element : message.selector || false			},{				service : FireSpark.jquery.service.TemplateRead,				template : message.template || false			},{				service : FireSpark.jquery.service.TemplateApply			},{				service : FireSpark.jquery.service.ElementContent			}],			errorflow : [{				service : FireSpark.jquery.service.ElementState,				element : message.selector || false			},{				service : FireSpark.jquery.service.ElementContent			}]		}], memory);	}};