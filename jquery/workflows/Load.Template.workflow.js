/** *	@workflow LoadTemplate *	@desc Loads template with data into element * *	@param loader object [memory] optional default FireSpark.jquery.service.LoadAjax *	@param agent string [memory] optional default false * *	@param element string [memory] *	@param select boolean [memory] optional default false *	@param loaddata string [memory] optional default FireSpark.core.constant.loadmsg *	@param animation string [memory] optional default 'fadein' ('fadein', 'fadeout', 'slidein', 'slideout') *	@param duration integer [memory] optional default 1000 *	@param delay integer [memory] optional default 0 * *	@param data object [memory] optional default {} *	@param key string [memory] optional default 'template' *	@param template string [memory] optional default 'tpl-default' * *	@param confirm boolean [memory] optional default false *	@param confirmmsg string [memory] optional default 'Are you sure you want to continue ?' *	@param selector string [memory] optional default false *	@param encode string [memory] optional default 'url' ('url', 'json') * *	@param url URL [memory] *	@param type string [memory] optional default 'json' *	@param request string [memory] optional default 'POST' *	@param workflow Workflow [memory] *	@param errorflow	Workflow [memory] optional default false * *	@param launch boolean [memory] optional default false *	@param status string [memory] optional default 'valid' *	@param message string [memory] optional default 'firespark' * *	@return element element [memory] ***/FireSpark.jquery.workflow.LoadTemplate = {	input : function(){		return {			required : ['element', 'url', 'workflow'],			optional : { 				loader : FireSpark.jquery.service.LoadAjax,				agent : false,				select : false, 				loaddata : FireSpark.core.constant.loadmsg,				animation : 'fadein',				duration : 1000,				delay : 0,				data : {}, 				key : 'template', 				template : 'tpl-default' ,				confirm : false,				confirmmsg : 'Are you sure you want to continue ?',				selector : false,				encode : 'url',				type : 'json',				request : 'POST',				errorflow : false,				launch : false,				status : 'valid',				message : 'firespark'			}		};	},		run : function($memory){		return FireSpark.Kernel.execute([{			service : FireSpark.core.service.LoadConfirm,			confirm : message.confirm || false,			value : message.confirmmsg || 'Are you sure you want to continue ?'		},{			service : FireSpark.jquery.service.RequestWrite,			loadparams : message.loadparams || false,			type : message.encode || false		},{			service : FireSpark.jquery.service.ElementState,			element : message.selector || false,			disabled : true		},{			service : FireSpark.jquery.service.ElementContent,			element : message.element || false,			data : message.loadmsg || FireSpark.core.constant.loadmsg,			duration : 10		},{			service : message.loader || FireSpark.jquery.service.LoadAjax,			loadurl : message.loadurl || false,			request : message.request || false,			processData : false,			agent : message.agent || false,			workflow : [{				service : FireSpark.jquery.service.ResponseRead,				process : message.process || true,				status : message.status || false,				processflow : message.processflow || false,			},{				service : FireSpark.jquery.service.ElementState,				element : message.selector || false			}, message.workflow || {				service : FireSpark.jquery.workflow.TemplateApply,				template : message.template || false			}],			errorflow : [{				service : FireSpark.jquery.service.ElementState,				element : message.selector || false			}, message.errorflow || {				service : FireSpark.jquery.service.ElementContent			}]		}], $memory);	},		output : function(){		return ['element'];	}};