/** *	@workflow InterfaceTile *	@desc Shows tile content into parent element * *	@param cntr string [memory] optional default selects closest with FireSpark.smart.constant.tileuicntr || FireSpark.smart.constant.tileuiprefix + ins *	@param ins string [memory] optional default false *	@param child selector [memory] optional default FireSpark.smart.constant.tileuisection *	@param select boolean [memory] optional default true *	@param tile string [memory] optional false *	@param anm string [memory] optional default 'fadein' ('fadein', 'fadeout', 'slidein', 'slideout') *	@param dur integer [memory] optional default 500 *	@param dly integer [memory] optional default 0 *	@param mv boolean [memory] optional default FireSpark.smart.constant.moveup *	@param mvdur integer [memory] optional default FireSpark.smart.constant.moveduration * *	@return element element [memory] * *	@author Vibhaj Rajan <vibhaj8@gmail.com> ***/FireSpark.smart.workflow.InterfaceTile = {	input : function(){		return {			optional : { 				cntr : false,				ins : false,				child : FireSpark.smart.constant.tileuisection,				select : false, 				tile : false,				anm : 'fadein',				dur : 500,				dly : 0,				mv : FireSpark.smart.constant.moveup,				mvdur : FireSpark.smart.constant.moveduration			}		};	},		run : function($memory){		$memory['cntr'] = $memory['cntr'] || $memory[1];		$memory['tile'] = $memory['tile'] || $memory[0] || false;				if($memory['tile'] === false){			var $ins = ($memory['cntr'] || FireSpark.smart.constant.tileuiprefix + $memory['ins']) + '>' + FireSpark.smart.constant.tileuicntr;		}		var $select = true;		$memory = Snowblozm.Kernel.execute([{				service : FireSpark.ui.service.ElementSection,				element : $ins || false,				input : { 					content : 'tile',					animation : 'anm',					duration : 'dur',					delay : 'dly'				},				select : $select		}], $memory);				if(Number($memory['mv'])){			$('body,html').animate({					scrollTop: 0			}, $memory['mvdur']);		}				return $memory;	},		output : function(){		return ['element'];	}};