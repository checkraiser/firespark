/** *	@workflow ReadHtml *	@desc Loads HTML content into element * *	@param loader object [memory] optional default FireSpark.jquery.service.LoadAjax *	@param agent string [memory] optional default false * *	@param url URL [memory] *	@param element string [memory] * *	@param select boolean [memory] optional default false *	@param loaddata string [memory] optional default FireSpark.core.constant.loadmsg *	@param animation string [memory] optional default 'fadein' ('fadein', 'fadeout', 'slidein', 'slideout') *	@param duration integer [memory] optional default 1000 *	@param delay integer [memory] optional default 0 *	@param action string [memory] optional default 'all' ('all', 'first', 'last', 'remove') * *	@param force boolean [memory] optional default FireSpark.smart.constant.poolforce *	@param cache boolean [memory] optional default false *	@param expiry integer [memory] optional default FireSpark.smart.constant.poolexpiry * *	@param iframe string [memory] optional default false *	@param agent string [memory] optional default root *	@param root element [memory] optional default false * *	@return element element [memory] * *	@author Vibhaj Rajan <vibhaj8@gmail.com> ***/FireSpark.smart.workflow.ReadHtml = {	input : function(){		return {			required : ['url', 'element'],			optional : { 				cache : true,				expiry : FireSpark.smart.constant.poolexpiry,				force : FireSpark.smart.constant.poolforce,				iframe : false,				agent : false,				root : false				select : false, 				loaddata : FireSpark.core.constant.loadmsg,				animation : 'fadein',				duration : 1000,				delay : 0,				action : 'all'			}		};	},		run : function($memory){		var $workflow = [{			service : FireSpark.jquery.service.ElementContent		}];				return Snowblozm.Kernel.execute([{			service : FireSpark.ui.service.ElementContent,			input : { data : 'loaddata' },			duration : 5		},{			service : FireSpark.smart.service.DataLoad,			type : 'html',			request : 'GET',			args : ['element', 'animation', 'duration', 'delay', 'action'],			workflow : $workflow,			errorflow : $workflow		}], $memory);	},		output : function(){		return ['element'];	}};